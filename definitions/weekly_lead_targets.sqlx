config {
  type: "table",
  schema: "volvo",
  name: "weekly_lead_target",
  description: "targets broken down by week"
}
WITH 
month_targets AS (
  -- Convert 'Jan-25' into a DATE format and get number of days in the month
SELECT 
    PARSE_DATE('%b-%y', Date) AS month_start,
    DATE_TRUNC(PARSE_DATE('%b-%y', Date), MONTH) AS month_date,
    DATE_SUB(DATE_ADD(DATE_TRUNC(PARSE_DATE('%b-%y', Date), MONTH), INTERVAL 1 MONTH), INTERVAL 1 DAY) AS month_end, 
    EXTRACT(YEAR FROM PARSE_DATE('%b-%y', Date)) AS year,
    EXTRACT(MONTH FROM PARSE_DATE('%b-%y', Date)) AS month,
    DATE_DIFF(DATE_ADD(DATE_TRUNC(PARSE_DATE('%b-%y', Date), MONTH), INTERVAL 1 MONTH), DATE_TRUNC(PARSE_DATE('%b-%y', Date), MONTH), DAY) AS days_in_month,
    `online_opportunities_target` AS online_target,
    `offline_opportunities_target` AS offline_target,
    `total_opportunities_target` AS total_target
FROM `metricmavens.volvo.monthly_leads_target`
),

daily_targets AS (
  SELECT 
    day_date AS date,
    FORMAT_DATE('%G-W%V', day_date) AS year_week,
    online_target / days_in_month AS daily_online_target,
    offline_target / days_in_month AS daily_offline_target,
    total_target / days_in_month AS daily_total_target
  FROM  month_targets
  JOIN UNNEST(GENERATE_DATE_ARRAY(month_start, month_end, INTERVAL 1 DAY)) AS day_date  
),

weekly_targets AS (
  -- Aggregate daily targets into weekly targets
  SELECT 
    year_week,
    SUM(daily_online_target) AS weekly_online_target,
    SUM(daily_offline_target) AS weekly_offline_target,
    SUM(daily_total_target) AS weekly_total_target
  FROM daily_targets
  GROUP BY year_week
  ORDER BY year_week
)

SELECT * FROM weekly_targets

pre_operations {
  CREATE TABLE IF NOT EXISTS ${self()} (
    year_week STRING,
    weekly_online_target FLOAT64,
    weekly_offline_target FLOAT64,
    weekly_total_target FLOAT64,
  ) ;
}


